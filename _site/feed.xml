<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>情書</title>
    <description>by muyun_</description>
    <link>/</link>
    <atom:link href="/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Wed, 03 Feb 2016 18:28:38 +0800</pubDate>
    <lastBuildDate>Wed, 03 Feb 2016 18:28:38 +0800</lastBuildDate>
    <generator>Jekyll v2.5.3</generator>
    
      <item>
        <title>Personal Challenge in 2016</title>
        <description>&lt;h4 id=&quot;section&quot;&gt;珍惜时间，珍惜机会，好好努力&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;提高英文到流利 (继续上课)&lt;/li&gt;
  &lt;li&gt;基本的粤语对话（去年的粤语课有点失败）
    &lt;ul&gt;
      &lt;li&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;作息规律&lt;/li&gt;
  &lt;li&gt;学会游泳&lt;/li&gt;
  &lt;li&gt;基本的素描 （基本画人像）
    &lt;ul&gt;
      &lt;li&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;除专业书外，每两月读一本书&lt;/li&gt;
  &lt;li&gt;有机会参加（或参与组织）一个有意义的活动
    &lt;ul&gt;
      &lt;li&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;交些新朋友&lt;/li&gt;
  &lt;li&gt;去北欧一趟&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Tue, 05 Jan 2016 00:00:00 +0800</pubDate>
        <link>/diary/personal-challenge-in-2016.html</link>
        <guid isPermaLink="true">/diary/personal-challenge-in-2016.html</guid>
        
        
        <category>diary</category>
        
      </item>
    
      <item>
        <title>生活的藝術</title>
        <description>&lt;p&gt;林語堂先生的&lt;a href=&quot;http://book.douban.com/subject/1017626/&quot;&gt;《生活的藝術》&lt;/a&gt;主要分享了先生自己的思想和生活所得的经验。&lt;/p&gt;

&lt;p&gt;一，觉醒 － 中国人的哲学观，即我们的人生观和事务观&lt;/p&gt;

&lt;p&gt;中国文化的最高理想人物，是一个对人生有一种建于明慧悟性上的“达观者”（&lt;small&gt;这种达观产生宽宏的怀抱，能使人带着温和的讥评心理度过
一生，丢开功名利禄，乐天知名地生活。这种达观也产生了自由意识，放荡不羁的爱好，傲骨和漠然的态度&lt;/small&gt;）。&lt;/p&gt;

&lt;p&gt;我们中国人的理智构造：&lt;br /&gt;
&amp;gt;&lt;font color=&quot;#800080&quot;&gt;伟大的现实主义，不充分的理想主义，很多的幽默感，以及对人生和自然的高度诗意感觉性（敏感性）。&lt;/font&gt;&lt;/p&gt;

&lt;p&gt;这种对快乐，痛苦，和人生百态的丰富敏感性，使中国人很肯定地感到尘世是美满的；其更大的意义是它事实上代表&lt;font color=&quot;#800080&quot;&gt;一种近乎哲学的艺术观念&lt;/font&gt;。因这理由，中国哲学家的人生观就是诗人的人生观，而且中国哲学是跟诗歌发生联系，而不比西方的哲学是跟科学发生联系的。&lt;/p&gt;

&lt;p&gt;另一方面，我们有浓厚的现实主义，这是一种安于人生现状的态度，一种认为“二鸟在林，不如一鸟在手”的态度；这种人生智慧的主要功&lt;br /&gt;
用是把人生哲学中一切不必要的东西摒除出去，而把哲学上的问题化减到很简单的地步 - &lt;font color=&quot;#800080&quot;&gt;家庭，生活，大自然
和文化的享受&lt;/font&gt;－ 同时停止其他不相干的科学训练和智识追求；这么一来，我们的人生智慧也即是一种不耐烦的态度－一种对形而&lt;br /&gt;
上学的哲学，以及与人生没有实际关系的智识的不耐烦态度。其结果即，是&lt;font color=&quot;#800080&quot;&gt;生活的目的，不是什么形而上的实物，而仅是生活本身&lt;/font&gt;。&lt;/p&gt;

&lt;p&gt;中国人的哲学因为具有这种现实主义和极端不相信逻辑及智能，就变成了一种对人生本身有直接亲热感觉的东西，而不肯让它归纳到任何&lt;br /&gt;
一种体系里去。因而中国虽有儒道释三教，每一种教都是宏大的哲学体系，但&lt;font color=&quot;#800080&quot;&gt;它们都曾被健全的常识所冲淡，因而都变成追求人生幸福的共同问题&lt;/font&gt;。&lt;/p&gt;

&lt;p&gt;有了这种文化和哲学，相比西洋人，中国人比较过着一种接近大自然和儿童时代的生活。在这种生活里，一种不太重视智能，敬重&lt;br /&gt;
肉体也尊崇精神，具有深沉的智慧，轻松的快活和熟悉世故但很孩子气的天真。 归纳起来，这种哲学的特征就是一种以艺术眼光对人生&lt;br /&gt;
的天赋才能（&lt;small&gt;丰富的敏感性&lt;/small&gt;），一种于哲理上有意识的回到简单（&lt;small&gt;现实主义&lt;/small&gt;），一种合理近情(Reasonableness)的生活理想。 最后的产品就是一种对于诗人，农夫和放浪者的崇拜。&lt;/p&gt;

&lt;p&gt;二，关于人类的观念&lt;/p&gt;

&lt;p&gt;传统的基督教观念有一种着重来世的倾向，拯救问题替代了人生幸福问题。这观念的涵义是人类要怎样才能脱离这个腐败，混乱和灭亡中&lt;br /&gt;
的世界，而到另一个世界里去。因此，就有了永生的观念。罪恶仍是今日通行的基督教教义的根本理论。&lt;/p&gt;

&lt;p&gt;希腊的异教世界是一个绝对不同的世界，希腊的神不过是另一个种族的人，是一族能够永生的巨人，同时地球上的人却不能够。大多数时&lt;br /&gt;
候希腊人承认人类总有一死的。一旦接受了这种命运后，便感到十分愉快。因为希腊人酷爱这个人生和这个宇宙，他们除了专心致志，科学地去理解&lt;br /&gt;
物质世界外，也注意于理解人生的真善美。&lt;/p&gt;

&lt;p&gt;中国人认为人类是造物之主，“万物之灵”。在儒家看来，人和天地并列为“三灵”，万物都有生命，或都有神灵依附。&lt;br /&gt;
这神灵和宇宙间一切生物一样，是由阴阳的成分结合而产生出来的。在这种用灵魂说为背景下，人自然也被视为神灵的具体表现。&lt;br /&gt;
所以在世的时候，当然须有一些热情和欲望，这些东西无所谓好坏。在儒家看来，是怎样使这些热情和欲望能够和谐地表现； 这可以归纳为&lt;br /&gt;
“让我们做合理近情的人”，就是中庸之道，好像人是介乎天地之间，介乎理想主义和现实主义之间，介乎喜欢一个好的思想和喜爱一盆美&lt;br /&gt;
味的笋炒肉之间，这些都是人之常情。这种近情合理（人性化）的态度造成了一种宽恕哲学，觉得人类的错误和谬行都可以获得宽恕，不论是法律上的，道德上的或政治上的，都可以认为是“人之常情”。&lt;/p&gt;

&lt;p&gt;三，我们的动物性遗产&lt;/p&gt;

&lt;p&gt;当我们承认人不免一死的时候，当我们意识到时间消逝的时候，诗歌和哲学才会产生出来。&lt;font color=&quot;#800080&quot;&gt;这种时间消逝的意识是藏在中西一切诗歌的
背后的 － 人生本是一场梦&lt;/font&gt;。&lt;/p&gt;

&lt;p&gt;当我们承认人类的动物性的时候，我们就总有一个填饱肚子的问题；孔子对于人类的天性，有着深切的了解，他把人生的大欲简括于营养&lt;br /&gt;
和生育二事之下，简单的说来，就是饮食男女(Note: &lt;small&gt;电影《饮食男女》by 李安&lt;/small&gt;)。&lt;/p&gt;

&lt;p&gt;但只有我们人类发明了一种文明（温和即文明），因而也有了人类的尊严。&lt;/p&gt;

&lt;p&gt;四，家庭之乐&lt;/p&gt;

&lt;font color=&quot;#800080&quot;&gt;中国的社会和生活都是组织于家庭制度基础上的，这个制度决定并润色整个中国式生活的模型。家庭意识和家庭
荣誉的感觉，或许就是中国人生中唯一的团体精神或团体意识, 或者说是中国人的宗教&lt;/font&gt;
&lt;p&gt;。&lt;/p&gt;

&lt;p&gt;在这种家庭制度的理想中，人并不是个人，而被认为是家庭的一分子，是家庭生活巨流中的一个必须分子。这个就是所谓“生命潮流”假说。&lt;br /&gt;
依这种假说，永生几乎是可以看到可以触到的东西了。他的生命不过是家庭大树上的一枝，或永远向前流去的潮流的一部分。所以他虽死&lt;br /&gt;
也是快乐的。因此中国的家长所关切的事情就是：亲见男婚女嫁。这种生命概念的结果：使一个人对于任何务事都有一种伸长的见解，而&lt;br /&gt;
不再认生命为始于个人，止于个人。&lt;/p&gt;

&lt;p&gt;中国人因为他们对生活的概念是完全以家庭中互助为基础，所以并没有个人独立意识。因此，到了老年受子女们抚养时候，也不觉得有什&lt;br /&gt;
么可耻的，反而将因由子女抚养他们而自己觉得欣喜。中国人的生存目的也仅此而已。&lt;/p&gt;

&lt;p&gt;很多中国人认为政治文学和艺术的成就所给予成功者的报酬，不过是些空心的智力上的喜悦。眼看自己的儿女长成人，其愉悦是出于衷心，而何等实在。&lt;/p&gt;

&lt;p&gt;五，生活之乐&lt;/p&gt;

&lt;font color=&quot;#800080&quot;&gt;以古人的见解，舒服即罪恶，耽于舒服即趋于失敬&lt;/font&gt;
&lt;p&gt;。当我们认识儒家的公私行为都以恭敬为主时，我们就能了然旧时的中国木器为什么制成那种样子。感谢十八世纪末和十九世纪初的浪漫派运动，它打破乐古礼的传统思想，方使舒服这件事不再被人认为罪恶。&lt;/p&gt;

&lt;p&gt;中国的酒筵，并不专为了吃菜饮酒，而也需作乐。宴集的目的，不是专在吃喝，而是在欢笑作乐。&lt;/p&gt;

&lt;p&gt;&lt;del&gt;中国人对于房屋和花园的见解，都以屋子本身不过是整个环境中的一个极小部分为中心观点。。。&lt;/del&gt;&lt;/p&gt;

&lt;p&gt;&lt;del&gt;中国艺术家常称赞松树的雄伟，松的可爱处在艺术上意义更深长，因为它代表幽静雄伟和出世，正和隐士的态度相类。&lt;/del&gt;&lt;/p&gt;

&lt;p&gt;话旅游。旅行以求忘却一切。旅行的真正理由是&lt;font color=&quot;#800080&quot;&gt;在于变换所处的社会，使他人拿他当一个寻常人看待&lt;/font&gt;。旅行的要点于无责任，无定时，无嚅嚅好问的邻人，无来客和无目的。&lt;/p&gt;

&lt;p&gt;话艺术。艺术是消遣，是人类精神的一种游戏。游戏的特性，在于游戏都是出于无理由的，而且也绝不能有理由。只有在游戏精神能够维持时，艺&lt;br /&gt;
术方不致于成为商业化。真正艺术精神只有在自动中方有的。 所以&lt;font color=&quot;#800080&quot;&gt;文学和艺术都是以个人情绪为基础的。艺术只是艺术家的灵魂的自然
表现，必须发于内心。&lt;/font&gt;&lt;/p&gt;

&lt;p&gt;在艺术作品中，&lt;font color=&quot;#800080&quot;&gt;最富有意义的部分即是技巧以外的个性&lt;/font&gt;。在文字著作中的，唯一最重要的东西即是作者所特有的笔法和感情，如他所表现于爱憎之中。 这里边必须有一种真性的流露，这个真性必不可被技巧所损毁，而&lt;font color=&quot;#800080&quot;&gt;必须在技巧之中自由而愉快地充沛着&lt;/font&gt;。一切艺术必须有它的个性。&lt;/p&gt;

&lt;p&gt;话读书。&lt;font color=&quot;#800080&quot;&gt;他必须不受拘束地去找寻自己的先生，找寻和自己的性情相近的人&lt;/font&gt;。一个人惟有藉着这个方法，才能从读书中获得益处。这犹如一个人和一个女子一见生情，一切必都美满。他会觉得这作家的笔法，心胸，见地，思态都是合式的。于是他对这作家的著作即能字字&lt;br /&gt;
领略，句句理会。并因为&lt;font color=&quot;#800080&quot;&gt;两人之间有一种精神上的融洽&lt;/font&gt;。等这魔法退去，他便会去找寻新的文字爱人，等到他有过三四个这类爱人，把他们的作品完全吞吸之后，他自己偏也成为一位作家了。&lt;/p&gt;

&lt;p&gt;话写作。初学者应先把写作的技巧完全撇开，暂时不必顾及这些小节，&lt;font color=&quot;#800080&quot;&gt;专在心灵上用功夫，发展出一种真实的文学个性，去作他的写作基
础&lt;/font&gt;。基础已打好，真实的文学个性已培养成功，笔法自然而然会产生，一切技巧也自然的跟着纯熟。&lt;/p&gt;

&lt;p&gt;话美。所谓文学的美和一切物事的美，&lt;font color=&quot;#800080&quot;&gt;大都有赖于变换和动作，并且以生活为基础&lt;/font&gt;。凡是活的东西都有变换和活动，而凡是有变换和活动的东西自然也有美。凡是尽其天性的，都有“文”或美的轮廓为其外饰，所以“文”或轮廓形式的美是内生的，不是外生的。&lt;/p&gt;

&lt;p&gt;六，近情&lt;/p&gt;

&lt;p&gt;和逻辑相对的有常识，或者&lt;font color=&quot;#800080&quot;&gt;近情精神（Reasonableness）&lt;/font&gt;。&lt;font color=&quot;#800080&quot;&gt;近情精神乃是中国
文明的精华和她的最好的方面。中国的一切社会生活乃是以“讲理”为基础的&lt;/font&gt;。 近情的思想其实就是人性化的思想。专讲逻辑的人&lt;br /&gt;
是永远自以为是的，所以他是不近人情的。在人事之中，不合逻辑的行为常是最能动人。法律本身就承认它未必能处处绝对平允，所以它也时常不能不迁就人情，所以一国元首都另有一种特赦权。 近情精神使我们的思想人性化，并且使我们不坚信自己总是对的。&lt;/p&gt;
</description>
        <pubDate>Sun, 03 Jan 2016 00:00:00 +0800</pubDate>
        <link>/summary/the-art-of-the-life.html</link>
        <guid isPermaLink="true">/summary/the-art-of-the-life.html</guid>
        
        
        <category>summary</category>
        
      </item>
    
      <item>
        <title>A review of Computer System</title>
        <description>&lt;p&gt;####Optimizing Program Performance [ch5]&lt;br /&gt;
 * &lt;strong&gt;trade-off between how easy a program is to implement and maintain, and how fast it runs&lt;/strong&gt;&lt;br /&gt;
   - Select an appropriate set of algorithms and data structures&lt;br /&gt;
   - make the compiler optimize the code effectively&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;The limitations of optimizing compilers -
    &lt;ul&gt;
      &lt;li&gt;reducing excessive function calls&lt;/li&gt;
      &lt;li&gt;eliminating unneeded memory references - introduce temp variables to hold intermediate rsults&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;program profiling&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;Amdahl’s Law
    &lt;ul&gt;
      &lt;li&gt;The performance gain depends both on &lt;strong&gt;xhow much we improve this part&lt;/strong&gt;&lt;br /&gt;
and &lt;strong&gt;how large a fraction&lt;/strong&gt; of the overall time this part originally required&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;the-memory-hierarchy-ch6&quot;&gt;The Memory Hierarchy [ch6]&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;Storage Technologies - &lt;strong&gt;trade-off between price and performance (access times)&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;Static Random-Access memory(SRAM) - stable - cache memory&lt;/li&gt;
      &lt;li&gt;Dynamic RAM - sensitive to any disturbance - main memory&lt;/li&gt;
      &lt;li&gt;Solid state dist (SSD)&lt;/li&gt;
      &lt;li&gt;rotating disk&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;DRAM and disk access times are much larger than CPU CYCLE TIMES
    &lt;ul&gt;
      &lt;li&gt;So systems bridge the gaps by organizing memory as a hierarchy of storage devices&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;locality - try to bridge the processor-memory gap&lt;/strong&gt;&lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;temporal locality - locate same data objects multiple time&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;spatial locality - nearby memory location&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;programs with good locality access most of their data from fast cache memories
    &lt;ul&gt;
      &lt;li&gt;Exploiting SRAM-based cache memories
        &lt;ul&gt;
          &lt;li&gt;programs that fetch data primarily from cache memories can run much faster than ones that fetch data primarily&lt;br /&gt;
from memory&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;temporal locality -  using a data object as often as possible once it has been read from memory&lt;/li&gt;
      &lt;li&gt;spatial locality - by reading data objects sequentially, with stride 1, in the order they are stored in memory&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;linking-ch7---enable-separate-compilation-just-only-recompile-one-source-and-relink-&quot;&gt;Linking [ch7] - enable separate compilation (just only recompile one source and relink )&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;Linking - concatenates blocks together, and decides on &lt;strong&gt;run-time locations&lt;/strong&gt; for the concatenated blocks
    &lt;ul&gt;
      &lt;li&gt;symbol resolution step -  symbol table in .symtab
        &lt;ul&gt;
          &lt;li&gt;associate each global symbol (functions and global variables) reference with a &lt;strong&gt;unique&lt;/strong&gt; symbol definition&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;relocation - associate &lt;strong&gt;a memory location with each symbol&lt;/strong&gt; definition, and then make them point to the memory&lt;br /&gt;
location
        &lt;ul&gt;
          &lt;li&gt;meger all sections of the same type into a new aggregate section&lt;/li&gt;
          &lt;li&gt;relocate symbol references so that they point to the correct run-time addresses&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;linking with static libraries
    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;related functions can be compiled into separate object modules and then packaged in a single static library file;&lt;br /&gt;
At link time, the linker will &lt;strong&gt;copy only the object modules&lt;/strong&gt;(symbol resolution) that are referenced by the program.&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;advantages&lt;/p&gt;
        &lt;ul&gt;
          &lt;li&gt;need to maintain and update the static libraries periodically&lt;/li&gt;
          &lt;li&gt;At run time, the code of the functions like I/O functions is duplicated in the text segment of each running process&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;dynamic linking with shared libraries
    &lt;ul&gt;
      &lt;li&gt;a single copy of the .text section of a shared libray in memory can be &lt;strong&gt;shared&lt;/strong&gt; by different running&lt;/li&gt;
      &lt;li&gt;the basic idea is to &lt;strong&gt;link the relocation and symbol table info&lt;/strong&gt; when the executable file is created, and then&lt;br /&gt;
complete the linking process (&lt;strong&gt;code and data&lt;/strong&gt; ) dynamically when the program is loaded&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;exceptional-control-flow-ecf-ch8&quot;&gt;Exceptional Control Flow (ECF) [ch8]&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;control flow (a sequence of control transfer) of the processor
    &lt;ul&gt;
      &lt;li&gt;control transfer - from the address ak to ak+1&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Exception - a change in the processor’s state (event) triggers an abrupt control tansfer (an exception)
    &lt;ul&gt;
      &lt;li&gt;&lt;strong&gt;an abrupt change in the control flow&lt;/strong&gt; in response to some change in the processor’s state&lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;&lt;strong&gt;The change in processor’s state&lt;/strong&gt; is known as an event&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;interrupt handling - occurs as a result of events in I/O device&lt;/li&gt;
      &lt;li&gt;traps handling - a procedure-like interface between user programs and the kernel known as a system call&lt;/li&gt;
      &lt;li&gt;fault handling - result from error conditions&lt;/li&gt;
      &lt;li&gt;abort handling&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;process -
    &lt;ul&gt;
      &lt;li&gt;an independent logical control flow&lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;a private address space&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;concurrent flows - a logical flow whose execution overlaps in time with another&lt;/li&gt;
      &lt;li&gt;signals&lt;/li&gt;
      &lt;li&gt;[TODO]&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;virtual-memory-ch9&quot;&gt;Virtual Memory [ch9]&lt;/h4&gt;

&lt;h4 id=&quot;network-programming&quot;&gt;Network programming&lt;/h4&gt;

&lt;h4 id=&quot;concurrent-programming&quot;&gt;concurrent programming&lt;/h4&gt;

&lt;h4 id=&quot;reference&quot;&gt;reference&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://csapp.cs.cmu.edu/public/code.html&quot;&gt;Computer Systems: A Programmer’s Perspective, 2/E&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.cs.umd.edu/class/sum2003/cmsc311/Notes/Memory/introCache.html&quot;&gt;Introduction to Caches&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Wed, 16 Dec 2015 00:00:00 +0800</pubDate>
        <link>/technology/system/summary/a-review-of-computer-system.html</link>
        <guid isPermaLink="true">/technology/system/summary/a-review-of-computer-system.html</guid>
        
        
        <category>technology</category>
        
        <category>system</category>
        
        <category>summary</category>
        
      </item>
    
      <item>
        <title>Some Biases</title>
        <description>&lt;blockquote&gt;
  &lt;font color=&quot;#800080&quot;&gt;如果你想要说服别人，要诉诸利益&lt;/font&gt;
  &lt;p&gt;，而非诉诸理性  &lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;font color=&quot;#800080&quot;&gt;唯一能让你真正保持生机的办法，就是深入挖掘你痴迷的东西&lt;/font&gt;
  &lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;传统中国重视思想却不重视理论，而且不重视逻辑训练    &lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;font color=&quot;#800080&quot;&gt;知道怎么站在别人的角度思考问题&lt;/font&gt;
  &lt;p&gt;，这是最重要的； 外交的艺术就是把你的愿望变成别人的愿望        &lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;font color=&quot;#800080&quot;&gt;可以选择善良，但要有应对复杂的能力&lt;/font&gt;
  &lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;年轻时花精力投入在自我成长上，到某个阶段，&lt;font color=&quot;#800080&quot;&gt;专业的力量会散发出一种独特魅力&lt;/font&gt;   &lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;念书的唯一目的就是知识，知识与所得财富有正相关；知识与商业报酬之间没有必然联系  &lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;font color=&quot;#800080&quot;&gt;庆祝每一次胜利，很自豪我做过的那些事&lt;/font&gt;
  &lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;font color=&quot;#800080&quot;&gt;观察他人是如何生活的&lt;/font&gt;
  &lt;p&gt;，结识来自各个收入水平的人群，并&lt;font color=&quot;#800080&quot;&gt;尝试去理解他们的世界&lt;/font&gt;  &lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;人若是心灵成熟，或是心智继续成长，就能与人讨论任何事情而不会引人生厌&lt;font color=&quot;#800080&quot;&gt;凡是经由他处理的每件事，都会变的有意义&lt;/font&gt;  &lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;直面未来生活的各种变故与不确定性，更好地与自己所生活的世界打交道；理解它的复杂性，以及自己在其中扮演的角色，从而拥有一个更美好和富有意义的人生  &lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;沟通的关键是认知差异； 信任是 了解对方的核心诉求，极力维持  &lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;有深入的跨国体验  &lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;font color=&quot;#800080&quot;&gt;男人能力一直在和责任赛跑；有些情况下，被残酷地赋予很难的责任，那也只能硬着头皮继续成长&lt;/font&gt;
  &lt;p&gt;； 另一种就是能力增长吼&lt;br /&gt;
，视野开阔了，会主动招揽一些责任，使命感； 两者并存   &lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;font color=&quot;#800080&quot;&gt;一个人不断进步的结果是遇到越来越精彩和优秀的人，你知道他／她真的很优秀，从外在到内心&lt;/font&gt;
  &lt;p&gt;。&lt;br /&gt;
就因为你变得优秀，你会遇到更优秀的人。 优秀是一种信息素，随风飘散。 &lt;font color=&quot;#800080&quot;&gt;为遇到这些更优秀的人而进步吧，不要停止&lt;/font&gt;。  &lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;font color=&quot;#800080&quot;&gt;在自己喜欢的人身上用心，在不喜欢自己的人身上健忘&lt;/font&gt;
  &lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;font color=&quot;#800080&quot;&gt;社交能力; 知道怎么站在别人的角度思考问题； 尝试理解对方的需求；人际关系的本质是 了解和应对别人的需求 &lt;/font&gt;
  &lt;p&gt;;&lt;br /&gt;
有一个高质量的朋友圈（价值观一致，有一些相同的爱好，在一起说话，最好有趣一些）  &lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;
&lt;/blockquote&gt;
</description>
        <pubDate>Mon, 14 Dec 2015 00:00:00 +0800</pubDate>
        <link>/diary/summary.html</link>
        <guid isPermaLink="true">/diary/summary.html</guid>
        
        
        <category>diary</category>
        
      </item>
    
      <item>
        <title>weekly summary</title>
        <description>&lt;p&gt;最近有点颓，加油吧，畢竟自己沒有那麼多時間來頹了&lt;/p&gt;
</description>
        <pubDate>Thu, 10 Dec 2015 00:00:00 +0800</pubDate>
        <link>/diary/weekly-summary.html</link>
        <guid isPermaLink="true">/diary/weekly-summary.html</guid>
        
        
        <category>diary</category>
        
      </item>
    
      <item>
        <title>Summary of the RA work</title>
        <description>&lt;p&gt;終於完成了這份RA工作，雖然很累，但是還是有不少的收穫；&lt;br /&gt;
稍微接觸到了些最科技前沿，知道professor们都在做些什么，是怎么思考一些问题的。&lt;/p&gt;

&lt;p&gt;前三个月 和 后面的两个月 比較失敗，各種問題吧。&lt;br /&gt;
一個感受就是 以後要多讀paper,多和厲害的人交流，自己在這方面還是需要些加強的，包括交往能力和表達能力；&lt;br /&gt;
在想如果有機會組織些活動的話，即可以鍛鍊組織能力，表達能力， 也可以鍛鍊人際交往能力的。&lt;/p&gt;

&lt;p&gt;另外一個就是要學會怎麼去拒絕別人，這份work自己在后面太拖了。&lt;/p&gt;

&lt;p&gt;在英文speaking and listening方面，一个问题是英文口音問題，另外一個就是 盡量要有些精力去 聽聽。&lt;/p&gt;

&lt;p&gt;人生苦短，盡量做些有意義的事，盡量交些有意思的朋友。&lt;/p&gt;

</description>
        <pubDate>Wed, 18 Nov 2015 00:00:00 +0800</pubDate>
        <link>/diary/summary-ra.html</link>
        <guid isPermaLink="true">/diary/summary-ra.html</guid>
        
        
        <category>diary</category>
        
      </item>
    
      <item>
        <title>Randomness</title>
        <description>&lt;h4 id=&quot;randomness-as-a-source-of-efficiency&quot;&gt;Randomness as a source of efficiency&lt;/h4&gt;
&lt;p&gt;Randomization of a part of the control is an essential concept of nature’s strategy.&lt;/p&gt;

&lt;p&gt;[TODO]&lt;/p&gt;

&lt;h4 id=&quot;reference&quot;&gt;reference&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;Is the Cosmos Random? from Scientific American [0036-8733] Musser, George yr:2015 vol:313 iss:3 pg:88&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.weibo.com/p/1001603833249125236809&quot;&gt;该死就死的市场经济&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Sun, 25 Oct 2015 00:00:00 +0800</pubDate>
        <link>/technology/randomness.html</link>
        <guid isPermaLink="true">/technology/randomness.html</guid>
        
        
        <category>technology</category>
        
      </item>
    
      <item>
        <title>Logic Gate</title>
        <description>&lt;h4 id=&quot;exclusive-or-xor--1--2&quot;&gt;exclusive or (XOR)  &lt;a href=&quot;http://stackoverflow.com/questions/14526584/what-does-the-xor-operator-do&quot;&gt;1&lt;/a&gt; , &lt;a href=&quot;http://www.cs.umd.edu/class/sum2003/cmsc311/Notes/BitOp/xor.html&quot;&gt;2&lt;/a&gt;&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;used in cryptography because it let’s us &lt;strong&gt;‘flip’ the bits&lt;/strong&gt; using a mask in a reversable operations&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;p1 (+) p2 (+) … (+) pn is true if the number of variables with the value true (1) is odd, because the XOR is associative&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;XOR is the same as addition modulo 2
    &lt;ul&gt;
      &lt;li&gt;p1 (+) p2 (+) … (+) pn == ( p1 + p2 + … + pn) % 2 - dividing mod 2 is one way to determine if a number is even or odd&lt;/li&gt;
      &lt;li&gt;Only the variables that have value 1 contribute to the sum, that determines how many variables have value 1&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;doing parity check
    &lt;ul&gt;
      &lt;li&gt;kind of checksum: use the XOR to check whether there is the flip&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

</description>
        <pubDate>Wed, 07 Oct 2015 00:00:00 +0800</pubDate>
        <link>/technology/logicgate.html</link>
        <guid isPermaLink="true">/technology/logicgate.html</guid>
        
        
        <category>technology</category>
        
      </item>
    
      <item>
        <title>monthly summary</title>
        <description>&lt;p&gt;整个的九月份状态奇差，一个是一直处于紧张状态（没有很好的调节），一个是作息不规律（晚睡）。&lt;/p&gt;

</description>
        <pubDate>Sat, 03 Oct 2015 00:00:00 +0800</pubDate>
        <link>/diary/month-summary.html</link>
        <guid isPermaLink="true">/diary/month-summary.html</guid>
        
        
        <category>diary</category>
        
      </item>
    
      <item>
        <title>Similarity Search</title>
        <description>&lt;h4 id=&quot;similarity-search-1&quot;&gt;Similarity Search &lt;sup id=&quot;fnref:1&quot;&gt;&lt;a href=&quot;#fn:1&quot; class=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt;&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Similarity Search in high-dimensional spaces becomes increasingly important in databases, data mining, and search engines,particularly for content-based search of feature-rich data such as audio recordings, digital photos, digital videos and other sensor data. Since feature-rich data objects are typically represented as high-dimensional feature vectors.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;The problem of similarity search refers to finding objects that have similar characteristics to the query object.  Similarity search is usually implemented as K-Nearest Neighbor (KNN) or Approximate Nearest Neighbors (ANN) search in high-dim feature-vector space.&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;KNN: find  the K objects that are closest to q according to a distance function&lt;/li&gt;
      &lt;li&gt;ANN: find K objects whose distances are within a small factor (1 + x) of the true K-nearest neighbors’s distances&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;An ideal indexing scheme for similarity search:&lt;/p&gt;
    &lt;ul&gt;
      &lt;li&gt;Accurate: very close to those of the brute-force, linear-scan approach&lt;/li&gt;
      &lt;li&gt;Time efficient: O(logN)&lt;/li&gt;
      &lt;li&gt;Space efficient: the index data structure may even fit into main memory&lt;/li&gt;
      &lt;li&gt;High-dimensional:  the indexing scheme should work well for datasets with very high intrinsic&lt;br /&gt;
  dimensionalities&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;the-related-approaches&quot;&gt;The related approaches&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;tree-based indexing methods for K-Nearest Neighbor(KNN)
    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;K-D tree: not time efficient for data with high-dim&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;TODO&lt;/p&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;the indexing method: LSH  &lt;sup id=&quot;fnref:1:1&quot;&gt;&lt;a href=&quot;#fn:1&quot; class=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt;
    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;use hash functions to &lt;strong&gt;map similar objects into the same hash buckets with high probability&lt;/strong&gt; .&lt;/p&gt;

        &lt;p&gt;using LSH functions to select candidate objects for a given query q,&lt;br /&gt;
and ranking the candidate objects according to their distances to q.&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;Drawback: to achieve high search accuracy, the LSH method needs to use multiple hash tables to produce a good candidate set.&lt;/p&gt;

        &lt;ul&gt;
          &lt;li&gt;
            &lt;p&gt;Experimental studies show that the basic LSH needs hundreds hash tables to achieve good search accuracy for high-dimensional datasets.&lt;/p&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;p&gt;The size of each hash table is proportional to the number of data objects, since each table has &lt;strong&gt;as many&lt;br /&gt;
entries as the number of data objects&lt;/strong&gt; in the dataset.&lt;br /&gt;
When the space requirement for the hash tables exceeds the main memory size, looking up a hash bucket may require a disk I/O, causing substantial delay to the query process.&lt;/p&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;The approach does not satisfy the space-efficiency requirement.&lt;/p&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Multi-probe LSH &lt;sup id=&quot;fnref:1:2&quot;&gt;&lt;a href=&quot;#fn:1&quot; class=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt;
    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;The main idea is to build on the basic LSH indexing method, but to use &lt;strong&gt;a carefully derived probing&lt;br /&gt;
  sequence to look up multiple buckets&lt;/strong&gt; that have a high probability of containing the nearest neighbors of a query object.&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;Given the property of LSH, if an object is close to a query object q but not hashed to the same bucket as q, it is likely to be in &lt;strong&gt;a buckets  that is “close by”&lt;/strong&gt; (i.e. the hash values of the two buckets only differ slightly).&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;By probing multiple buckets in each hash table, the method requires far fewer hash tables than previous LSH methods&lt;/p&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;footnotes&quot;&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:1&quot;&gt;
      &lt;p&gt;“Multi-probe LSH: Efficient indexing for high-dimensional similarity search” by Q.Lv, W.Josephson, Z. Wang, M. Charikar, and K. Li, VLDB &lt;a href=&quot;#fnref:1&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt; &lt;a href=&quot;#fnref:1:1&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;sup&gt;2&lt;/sup&gt;&lt;/a&gt; &lt;a href=&quot;#fnref:1:2&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;sup&gt;3&lt;/sup&gt;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;
</description>
        <pubDate>Fri, 04 Sep 2015 00:00:00 +0800</pubDate>
        <link>/technology/algorithms/similaritysearch.html</link>
        <guid isPermaLink="true">/technology/algorithms/similaritysearch.html</guid>
        
        
        <category>technology</category>
        
        <category>algorithms</category>
        
      </item>
    
=======
<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>情书</title>
    <description>by muyun_</description>
    <link>/</link>
    <atom:link href="/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Mon, 08 Dec 2014 01:28:17 +0800</pubDate>
    <lastBuildDate>Mon, 08 Dec 2014 01:28:17 +0800</lastBuildDate>
    <generator>Jekyll v2.5.2</generator>
    
      <item>
        <title>寻路中国</title>
        <description>&lt;p&gt;TODO&lt;/p&gt;
</description>
        <pubDate>Fri, 05 Dec 2014 22:42:00 +0800</pubDate>
        <link>/2014/12/05/country-driving.html</link>
        <guid isPermaLink="true">/2014/12/05/country-driving.html</guid>
        
        
      </item>
    
      <item>
        <title>总结这几个月</title>
        <description>&lt;ul&gt;
&lt;li&gt;一些欢乐时光 - &lt;strong&gt;总是一些有意义或者让自己很有成长的一些事情&lt;/strong&gt;

&lt;ul&gt;
&lt;li&gt;跟着几个朋友去了兰桂坊半通宵了一次，喝酒跳舞，回来时候淋了一身大雨；几个台湾的和两个德国女孩的那种开放和自由让人印象深刻&lt;/li&gt;
&lt;li&gt;去hiking了一次，大概6个小时，天气潮热，准备不足 - 带水不足, 但是还是挺欢乐的, 尤其是和一个马来亚的华裔（读社会科学的本科）聊了下南洋的事情，可惜没留下联系方式&lt;/li&gt;
&lt;li&gt;打了一次网球，稍微重温了下当年的学习，还是应该多多练习下；太开心 了，好长时间没有这么运动过了&lt;/li&gt;
&lt;li&gt;看了几个电影和电视剧；《Gravity》和《权利的游戏》第三季还不错，不过第三季没有了前两季的那种感觉了&lt;/li&gt;
&lt;li&gt;看了几个记录片;《mankind:the story of all of us》 太经典了，确实，科技和商业才是人类发展的原动力 –再看下英文版&lt;/li&gt;
&lt;li&gt;每天吃饭，大伙都积极，互助 &lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;ul&gt;
&lt;li&gt;需要改进的地方

&lt;ul&gt;
&lt;li&gt;每天练习英语&lt;/li&gt;
&lt;li&gt;中午听下英语, 看看英语文章&lt;/li&gt;
&lt;li&gt;生活热情&lt;/li&gt;
&lt;li&gt;烦的时候 - 总是和一些志同道合的人一起的活动&lt;/li&gt;
&lt;li&gt;和人去运动 - 和人聊聊 - 去做一些事情 -&lt;/li&gt;
&lt;li&gt;找一个从没去过的街道&lt;/li&gt;
&lt;li&gt;去一个心存好奇的地方,感受自己的范围以外的人生样貌&lt;/li&gt;
&lt;li&gt;学习一项新的技艺,比如吉它&lt;/li&gt;
&lt;li&gt;做点困难的事情 - 不要和自己的职业类似比如去孤儿院做义工,去一 个复杂的机械厂从学徒做起&lt;/li&gt;
&lt;li&gt;多读些文学书,心理书&lt;/li&gt;
&lt;li&gt;多总结下&lt;/li&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;ul&gt;
&lt;li&gt;需要提升的经验

&lt;ul&gt;
&lt;li&gt;关于工作&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;所有的说法都很具体并且来自于切身的经历&lt;/strong&gt;;&lt;strong&gt;尊重那些踏实的人,多做事,把小事做好&lt;/strong&gt; &lt;/li&gt;
&lt;li&gt;每一个人,都是我的老师;养成一种&lt;strong&gt;随时随地随人随事学习&lt;/strong&gt;的习惯:用心观察生活,在旅行中考察风土人情,&lt;strong&gt;思考为什么并且找寻答案&lt;/strong&gt;,询问各种职业的人关于他们的工作&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Don&amp;#39;t do lousy jobs&lt;/strong&gt;. 随着年龄的增长，我们犯错误的成本越来越高；&lt;strong&gt;如果是因为怠慢而犯错以至丧失机会，那代价就太大了&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;真正适合我的环境和圈子，应该是能够让我&lt;strong&gt;展现真实的自我&lt;/strong&gt;的地方&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;don&amp;#39;t judge too soon&lt;/strong&gt; .  先入为主很容易误判； 对人对事，在收集到足够证据之前，&lt;strong&gt;不好轻易下定论&lt;/strong&gt;，言辞上留有余地，心理上抱有一定程度的观望，爱恨不在一瞬间，真伪良莠需要时间来证明&lt;/li&gt;
&lt;li&gt;人才都要经得起折腾，&lt;strong&gt;负责到底的人创造性解决难题的人&lt;/strong&gt;是最有机会成为职场黑马的&lt;/li&gt;
&lt;li&gt;职场人如果所做的工作没有吃力感，较轻松，是一个比较危险的状态，意味着随时你的工作会被更低工资的人替代；&lt;strong&gt;给自己一点压力，你才会进步&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;有能力还全心全意还团结协作的人就是黑马了；&lt;strong&gt;三心二意的投入和全心全意的投入其实费的时间一样，但工作结果完全不一样&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;一部分员工做事会反思有悟性并且会想出一些小办法提高效率，还有极少员工会&lt;strong&gt;归纳会思考&lt;/strong&gt;，会将&lt;strong&gt;工作流程进行极大的改进&lt;/strong&gt;并&lt;strong&gt;找到一件事情的关键点&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;/li&gt;
&lt;li&gt;关于生活的观念&lt;/li&gt;
&lt;li&gt;庆祝每一个微小的胜利和喜悦&lt;/li&gt;
&lt;li&gt;懂得捍卫自己,但不要把自己的行为当成理所应当;如果认为另一方是在利用你,那么要懂得维护自己的利益(如果不确定是被利用还是遭遇不 公平,&lt;strong&gt;问问亲朋好友或所在行业中比较合适的人&lt;/strong&gt;);另一方面,在没有理由的时候也要保持清醒,不要把自己的行为当成理所应当 &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;只要不属于一切都理所应当的那一方,坦诚面对自己的需求&lt;/strong&gt;;&lt;strong&gt;只管要求想要的东西&lt;/strong&gt;,而不是在那里纠结要不要,怎么样或什么才是合理的;&lt;strong&gt;合理的要求不会损害双方的关系&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;不要害怕表达你自己,习惯被拒绝&lt;/strong&gt;; 平和面对一次又一次的拒绝&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;钱可以给你自由,理财&lt;/strong&gt;,&lt;strong&gt;尽早投资&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;尽可能一次只做一件事&lt;/strong&gt;,吃饭,谈话...&lt;/li&gt;
&lt;li&gt;定期接触大自然;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;总是尽最大努力&lt;/strong&gt;,这样，你永远都不会后悔或者想要了解“如果……将会怎样”&lt;/li&gt;
&lt;li&gt;为了达到目标,&lt;strong&gt;现在应该做些什么呢&lt;/strong&gt;?&lt;strong&gt;从今天开始就要把它融入自己的生活&lt;/strong&gt;;&lt;/li&gt;
&lt;li&gt;当面对某些决定时, &lt;strong&gt;选择做从现在起的一年中不会后悔的事情&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;如何运用你的心态完全由你掌控&lt;/strong&gt;;你的行为可以出于爱,善良,大方,关切,你的生活越充满爱,善良,大方和关切&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;生活是为了创造价值&lt;/strong&gt;;我们的文化教育我们成为&amp;quot;消费者&amp;quot;而不是贡献者,应该认识到&lt;strong&gt;人生的意义在于创造价值&lt;/strong&gt;,做出这样的选择需要勇气,计划和坚定;如果认识到这一点,人生将充满积极的动力,并学会充满善意地对待周围的人&lt;/li&gt;
&lt;li&gt;听话不是缺点,也不是优点,&lt;strong&gt;只是一个状态&lt;/strong&gt;, 在很多场合也非常听话; &lt;strong&gt;总是依赖别人的话调整自己的行为才是问题&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;在人际关系中&lt;strong&gt;努力寻找结合点,契合点&lt;/strong&gt;,而不是只盯着矛盾分岐; 永远不与任何人包括对你最不友好的人纠缠,那是浪费时间;&lt;/li&gt;
&lt;li&gt;不要太多关注自己不能控制的部分,&lt;strong&gt;做好自己能控制的部分&lt;/strong&gt;; &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;不要打听一个人的过去,衡量人的标准是他今天的行为&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;他们健美, 幽默, &lt;strong&gt;亲和&lt;/strong&gt;, 健谈, &lt;strong&gt;乐观&lt;/strong&gt;, 阳光&lt;/li&gt;
&lt;li&gt;为了建立有效的人际关系,和你在一起时,让其他人&lt;strong&gt;感觉舒服&lt;/strong&gt;很重要&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;ul&gt;
&lt;li&gt;自律

&lt;ul&gt;
&lt;li&gt;将&lt;strong&gt;自控负反馈环完全放在自身而无求于他人监控&lt;/strong&gt;,从而效率奇高&lt;/li&gt;
&lt;li&gt;极具职业精神&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;业内技能输出型人物,必定无怨无悔地付出,做事极其认真,能感到其强烈信念&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;目标

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;思维清晰严谨, 有条理, 思辨能力强&lt;/strong&gt;; 一下能抓住问题要害,且有思考后的 执行力&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;心态积极,对人对事总看到光明的一面&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;愿意帮助人,愿意给人有益的建议&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;做事有效率,时间观念强, 管理时间和对事情的优先处理能力超强&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;受信用,制定目标,总能实现&lt;/li&gt;
&lt;li&gt;如果他认为是对的,&lt;strong&gt;总能影响人,说服人,既便是面对比他权力大的人&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;学习

&lt;ul&gt;
&lt;li&gt;从不浪费时间,喜欢读书并送书给朋友们&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;抓住事物的本质&lt;/strong&gt;的能力超强,&lt;strong&gt;审时度势&lt;/strong&gt;能力超强&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;待人友好&lt;/strong&gt;,无论你多大多小&lt;/li&gt;
&lt;li&gt;只要有可能总是&lt;strong&gt;尽最大力量帮助身边的人和朋友&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;对人评价&lt;strong&gt;正面积极&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;理性自律,自强自尊&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;ul&gt;
&lt;li&gt;Reference:

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://site.douban.com/107747/widget/notes/175122/note/215979107/&quot;&gt;李东:我在纽约学到了什么&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.forbeschina.com/review/201409/0037188.shtml&quot;&gt;获得成功和幸福的20条基本生活经验&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Sun, 13 Jul 2014 14:53:00 +0800</pubDate>
        <link>/thinking/summary/2014/07/13/summary-about-these-months.html</link>
        <guid isPermaLink="true">/thinking/summary/2014/07/13/summary-about-these-months.html</guid>
        
        
        <category>thinking</category>
        
        <category>summary</category>
        
      </item>
    
      <item>
        <title>思考的技术</title>
        <description>&lt;p&gt;摘录自&lt;a href=&quot;http://book.douban.com/subject/3138847/&quot;&gt;思考的技术&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;不要把假设和结论混为一谈; &lt;strong&gt;搜集证据,印证假设到导出真正结论过程中的逻辑思考&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;认清现象和原因的不同; &lt;strong&gt;很多都不是原因,而是现象(结果)&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;在许多个案中,真正的原因只有其中一个,而其他只是这个原因导致的现象;&lt;/li&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;如果发现自己的假设是错的,重新做假设,再次出发就行了&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;一直悔恨自己的人生,与固执于错误的假设是一样没有意义的&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;在提出假设的阶段,真正的成败挑战才登场&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;解决问题的能力,就是为印证假设不辞辛苦的行动力&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;给出的建议中,只要有一个就足够了&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;逻辑思考的基础在于累积事实,如果呈现的是事实,就一定要虚心接受&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;当自己的意见和对方不同时,以秉持事实为证的信念&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;线性思考行不通; 科学的方法是&lt;strong&gt;问为什么,理由&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;真的是这样吗? 才是工作的开始,要听的是论点&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;一个问题有数百个变量,且随时间而变化,所以答案不唯一; 要准确做出判断
几乎不可能 ,但是&lt;strong&gt;以科学的方法思考,则可做整体的控制&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;现在已进入像叶子不知会掉落何处的复杂体系中,几乎所有问题都没有答案;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;培养孩子养成动脑思考的习惯,让孩子对无解的问题设法提出假设,并不厌
其烦努力证明自己的假设是否正确&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;世界上许多问题本来就没有答案; 那些&lt;strong&gt;忠于自己,能够找出属于自己的答案的人,其生命力比起已经习惯别人给出答案的人,一定更为强韧&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;就算没有答案,也会自己提出假设,反复求证,直到找出答案&lt;/strong&gt;; 不管碰到任何
困难,都勇于接受挑战,坚持到底,才是教育的根本&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;思考方式,重视的是如何才能导出结论&lt;/strong&gt;,而不是有没有知识&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;以假设前提进行回答,有前提就有结论的思考模式&lt;/strong&gt;; 对问题的前提先做个明
确的假设,若前提错误,可以改变前提再回答&lt;/li&gt;
&lt;li&gt;&lt;br&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;不太需要思考的事,尽量减少思考,且&lt;strong&gt;绝不没事自寻烦恼,生活要非常简单,把能规律化的事情规律化&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;训练自己常保持好奇心,和别人接触的机会增长见识&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;做一些可以让自己生存下去的投资,&lt;strong&gt;请问你成长了多少&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;最伤脑筋的是&lt;strong&gt;做什么事都半途而废的人&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;碰到自己没有遇到过的问题时,尝试解决&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;常常提出质疑,然后找出问题的解决方法&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Sun, 29 Jun 2014 16:23:00 +0800</pubDate>
        <link>/summary/reading/thinking/2014/06/29/summary-from-thinking.html</link>
        <guid isPermaLink="true">/summary/reading/thinking/2014/06/29/summary-from-thinking.html</guid>
        
        
        <category>summary</category>
        
        <category>reading</category>
        
        <category>thinking</category>
        
      </item>
    
      <item>
        <title>Building Abstractions with Procedures</title>
        <description>&lt;p&gt;TODO&lt;/p&gt;
</description>
        <pubDate>Thu, 29 May 2014 23:16:00 +0800</pubDate>
        <link>/programming/2014/05/29/building-abstractions-with-procedures.html</link>
        <guid isPermaLink="true">/programming/2014/05/29/building-abstractions-with-procedures.html</guid>
        
        
        <category>programming</category>
        
      </item>
    
      <item>
        <title>Search Algorithms: Binary Search Trees</title>
        <description>&lt;p&gt;Binary search trees (BST) combines the flexibility of insertion in a
linked list (using two links per node leads to an efficient
implementation) with the efficiency of search in an ordered array.&lt;/p&gt;

&lt;p&gt;BST is a binary tree in symmetric order. A binary tree either either
or two disjoint binary trees.  Symmetric order means that each node&amp;#39;s
key is larger than all keys in its left subtree, and smaller than all
keys in its right subtree.&lt;/p&gt;

&lt;p&gt;A Node is comprised of four fields: a key and a value; a reference to
the left (smaller keys) and right subtree (larger keys).&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Node&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Key&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;   
        &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Value&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;val&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Node&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;left&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;// the left link points to a BST for items with smaller keys&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Node&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;right&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;// the right link points to a BST for items with larger keys&lt;/span&gt;

        &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Node&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Key&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Value&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;val&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;){&lt;/span&gt;
           &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;key&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
           &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;val&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
 &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;The Implementation:&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The search use the recursive algorithm to search for a key, the function get()&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;get&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Key&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;){&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;root&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;//starting with the root of the tree&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Value&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Node&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Key&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;){&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cmp&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;compareTo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cmp&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;left&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cmp&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;right&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;val&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The insert put key-value pair into BST, if key already exists, update
with new value, the function put()&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;put&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Key&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Value&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;val&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;){&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;put&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;root&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;val&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Node&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;put&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Node&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Key&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Value&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;val&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;){&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Node&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;val&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cmp&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;compareTo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cmp&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;left&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;put&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;left&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;val&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;//x.left is null, after new Node, put this ref to the new node into x.left&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cmp&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;right&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;put&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;right&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;val&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;val&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;Performance Analysis:&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The running times depend on the shapes of the trees, which depends on the &lt;strong&gt;order in which the
keys come in (insert)&lt;/strong&gt;.  (If the key is inserted in natural order, this is no difference from
linked list).&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Binary search trees correspond exactly to Quicksort partitioning&lt;/strong&gt;. In
the binary search trees, we have a root, and everybody smaller to the
left, and everybody larger to the right. In the Quicksort
partitioning, after the random shuffling, we have the partitioning
element and then we process everybody to the left independently of
everybody to the right, so, if N &lt;strong&gt;distinct keys&lt;/strong&gt; are inserted into a BST
&lt;strong&gt;in random order&lt;/strong&gt;, the expected number of compares for a
search/insert is &lt;strong&gt;~2lnN(about 1.39lgN) on the average&lt;/strong&gt; . But there&amp;#39;s problem that the actual worst
case height if the keys come in in order and reverse order and other
natural orders (the worst tree shape), that the time could be proportional to ~N .&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;References: 

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://algs4.cs.princeton.edu/32bst/&quot;&gt;Binary Search Trees&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Sun, 25 May 2014 22:20:00 +0800</pubDate>
        <link>/algorithms/2014/05/25/search-algorithms-binary-search-trees.html</link>
        <guid isPermaLink="true">/algorithms/2014/05/25/search-algorithms-binary-search-trees.html</guid>
        
        
        <category>algorithms</category>
        
      </item>
    
      <item>
        <title>Search Algorithms: Binary Search</title>
        <description>&lt;p&gt;A symbol table is a data structure for &lt;strong&gt;key-value pairs&lt;/strong&gt; that supports
two operations: insert (put) a new pair into the table and search for
(get) the value associated with a given key .&lt;/p&gt;

&lt;p&gt;Binary search in an ordered array can implement the symbol table
API. The underlying data structure is two parallel array, &lt;strong&gt;with the
keys kept in order&lt;/strong&gt;.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The Implementation:&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;For get(), the rank() (returns the number of keys) tells us precisely where the key is to be found;&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;c1&quot;&gt;//return the value associated with the given key, or null&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Value&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Key&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;){&lt;/span&gt;
   &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rank&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;//return the number of keys in the table&lt;/span&gt;
   &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;N&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;keys&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;compareTo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
       &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;vals&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;];&lt;/span&gt;

   &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;c1&quot;&gt;//return the number of keys in the table that are smaller than given key&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;rank&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Key&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;){&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lo&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hi&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;N&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lo&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hi&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;){&lt;/span&gt;
        &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lo&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;hi&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cmp&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;compareTo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;keys&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]);&lt;/span&gt;

        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cmp&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hi&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cmp&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lo&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;and for put(), the rank tells where to update the value .&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;c1&quot;&gt;//search for key, update value if found, grow table if new&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;put&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Key&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Value&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;val&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;){&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rank&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;//where to update the value&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;// key is already in table&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;N&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;keys&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;compareTo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;){&lt;/span&gt;
         &lt;span class=&quot;n&quot;&gt;vals&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;val&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
         &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
     &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;// insert new key-value pair&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;N&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;keys&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;resize&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;keys&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;j&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;N&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;j&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;--)&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
         &lt;span class=&quot;n&quot;&gt;keys&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;keys&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;];&lt;/span&gt;
         &lt;span class=&quot;n&quot;&gt;vals&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;vals&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;];&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;keys&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;vals&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;val&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;N&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++;&lt;/span&gt;
 &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;Performance Analysis:&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The reason that we &lt;strong&gt;keep keys in an ordered array&lt;/strong&gt; is so that we can use
&lt;strong&gt;array indexing to dramatically reduce the number of compares required
for each search using the known as binary search&lt;/strong&gt; ( &lt;strong&gt;can auto calculate
the related mid value based on array index&lt;/strong&gt;).  Binary search in an
ordered array with N keys uses no more than &lt;strong&gt;lgN + 1&lt;/strong&gt; compares for a
search; and Inserting a new key into an ordered array uses &lt;strong&gt;~2N array
accesses&lt;/strong&gt; in the worst case (&lt;strong&gt;e.g. move the array entirely, line 14~16&lt;/strong&gt;), so inserting N keys into an initially
empty table uses &lt;strong&gt;~N^2 array accesses&lt;/strong&gt; in the worst case; See the table,&lt;/p&gt;

&lt;p&gt;| algorithm | worst-case search | worst-case insert|
 |---------------|:-------:|--------:|
 | sequential search|  N      |     N    | 
 | binary search    |  lgN    |     2N   | &lt;/p&gt;

&lt;p&gt;In summary, For a &lt;strong&gt;static table&lt;/strong&gt; (with no insert operations allowed), it
is &lt;strong&gt;worthwhile to initialize and sort the table&lt;/strong&gt;; Still, binary
search is infeasible for use in many other applications. For example,
it fails because &lt;strong&gt;searches and inserts are intermixed and the table
size is too large&lt;/strong&gt; . As typical modern search clients require symbole
tables that can support fast implementations of both search and
insert. The means we have to devise algorithms and data structures
that achieve logarithmic performance for both search and insert. To
&lt;strong&gt;support efficient insertion&lt;/strong&gt;, it seems that we need a &lt;strong&gt;linked
structure&lt;/strong&gt;. But a singly linked list forecloses the use of binary
search, because &lt;strong&gt;the efficiency of binary search depends on the ability
to get to the middle of any subarray quickly via indexing&lt;/strong&gt;. To
combine the efficiency of binary search with the flexibility of linked
structures, we need more complicated data structure. That are &lt;strong&gt;binary
search trees and hash tables&lt;/strong&gt; .&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;References:&lt;br&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://algs4.cs.princeton.edu/31elementary/&quot;&gt;Elementary Symbol Tables&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Sun, 11 May 2014 22:30:00 +0800</pubDate>
        <link>/algorithms/2014/05/11/search-algorithms-binary-search.html</link>
        <guid isPermaLink="true">/algorithms/2014/05/11/search-algorithms-binary-search.html</guid>
        
        
        <category>algorithms</category>
        
      </item>
    
      <item>
        <title>Sort Algorithms: Priority Queues</title>
        <description>&lt;p&gt;&lt;strong&gt;Priority Queues&lt;/strong&gt; is a data type to find the largest M items in a
stream of N items (Constrict: Not enough memory to store N
items). Using priority queues is similar to using queues and stacks
but implementing them efficiently is more challenging.  We consider a
classic priority-queue implementation based on the &lt;strong&gt;binary heap&lt;/strong&gt;
data structure, where items are kept in an array, subject to certain
ordering constraints that allow for &lt;strong&gt;efficient (log-time)
implementations&lt;/strong&gt; of remove the maximum and insert.&lt;/p&gt;

&lt;p&gt;We use array representation of a heap-ordered complete binary tree.
Because array implementation &lt;strong&gt;does not waste any space on the usual
pointers&lt;/strong&gt; you have in a tree to traverse between parents and
children. The reason is that we&amp;#39;re able to &lt;strong&gt;keep this binary tree as
balanced as possible, we don&amp;#39;t need pointers to figure out the parents
and children&lt;/strong&gt;. we can just read that off directly from the position in
the array.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The Implementation:&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The binary heap is that &lt;strong&gt;parent&amp;#39;s key no smaller than children&amp;#39;s key&lt;/strong&gt;, that&amp;#39;s (k is the index):
: -&lt;strong&gt;set a[k] to a[k/2] when we move up the tree&lt;/strong&gt;,
: -&lt;strong&gt;set a[k] to a[2*k] or a[2*k+1] when move down the tree&lt;/strong&gt;;&lt;/p&gt;

&lt;p&gt;We can take advantage of the capability to move up and down paths in
the tree without pointers and have guaranteed &lt;strong&gt;logarithmic performance&lt;/strong&gt;
because the height of a complete binary tree of size N is lgN.&lt;/p&gt;

&lt;p&gt;The basic algorithm swim (bottom-up reheapify) moves up the heap until we reach a node with a larger key, or the root; The function swim(int k)&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;c1&quot;&gt;//the parent of the node at position k in a heap is at position k/2&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;swim&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;k&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;){&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;k&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;less&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;k&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;k&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)){&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;//the node&amp;#39;s key larger than parent&amp;#39;s key&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;exch&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;k&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;k&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;              &lt;span class=&quot;c1&quot;&gt;//exchange the node with its parent&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;k&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;k&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The sink algorithm movs down the heap until we reach a node with both children smaller(or equal,) or the bottom; The function sink(int k)&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;c1&quot;&gt;//the children of the node at position k in a heap are at positions 2k and 2k+1&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;sink&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;k&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;){&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;k&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;N&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;){&lt;/span&gt;
        &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;j&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;k&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;                    &lt;span class=&quot;c1&quot;&gt;//the children of the node&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;j&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;N&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;less&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;//find the smaller children&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;less&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;k&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;break&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;exch&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;k&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;                     &lt;span class=&quot;c1&quot;&gt;//swap the node with the smaller children&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;k&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The insert algorithm requires no more than 1 + lgN compares, which involving &lt;strong&gt;moving along a path between the root and the bottom of the heap&lt;/strong&gt; whose number of links is no more than lgN; the function insert(key x)&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;insert&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Key&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;){&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;pq&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[++&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;N&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;swim&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;N&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;     &lt;span class=&quot;c1&quot;&gt;//swim up through the heap&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The heap algorithms require no more than 2lgN compares for remove the maximum; The operation involves moving the heap path no more than lgN, and it requires two compares for each node on the path (except at the bottom): one to find the child with larger key, the other to decide whether that child needs to be promoted; The function delMax()&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Key&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;delMax&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(){&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;Key&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;max&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pq&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;];&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;//the largest key off the top&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;exch&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;N&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;--);&lt;/span&gt;    &lt;span class=&quot;c1&quot;&gt;//exchange the last one with root&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;sink&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;         &lt;span class=&quot;c1&quot;&gt;//sink sown through the heap&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;pq&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;N&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;//to avoid loitering and help with garbage collection&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;max&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;Performance Analysis:&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;For typical applications that &lt;strong&gt;require a large number of intermixed insert and remove the maximum/min operations&lt;/strong&gt; in a large priority queue, the elementary implementations using an ordered array or an unordered array require linear time for one of the operations, a heap-based implementation provides a guarantee that both operations complete in &lt;strong&gt;logarithmic time&lt;/strong&gt;.&lt;/p&gt;
</description>
        <pubDate>Sat, 19 Apr 2014 19:19:00 +0800</pubDate>
        <link>/algorithms/2014/04/19/sort-algorithms-priority-queues.html</link>
        <guid isPermaLink="true">/algorithms/2014/04/19/sort-algorithms-priority-queues.html</guid>
        
        
        <category>algorithms</category>
        
      </item>
    
      <item>
        <title>Some Learning about Economics</title>
        <description>&lt;p&gt;总结自&lt;a href=&quot;http://www.oklink.net/a/0011/1101/mgzy/003.htm&quot;&gt;产权与交易费用&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;关于经济规律&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;在任何经济制度下,决定一个人生活的境况,富贵贫践的因素,始终脱离不了&lt;strong&gt;适者生存,不适者淘汰&lt;/strong&gt;的原则; 以竞争定成败,分富贵,必定有一个或多个衡量的准则或规格来决定胜负,或分出&amp;quot;适者&amp;quot;与&amp;quot;不适者&amp;quot;; 在成千上万的横量准则中,只有以 &lt;strong&gt;市场价值&lt;/strong&gt; 作衡量成败，支配资源的准则，是没有浪费。既然唯一没有经济浪费的竞争准则是市场价值，这种 &lt;strong&gt;准则只有在私有产权下才可以有效运用（why？ 因为没有私产就没有自由市场,也没有真正的市价）&lt;/strong&gt;。私有产权制度就是资本主义的骨干；倘若取消私有产权，或在私产界定不健全的情形下，其他种种形式的竞争衡量准则会纷纷出现；适者生存，不适者淘汰的原则是没有改变，但换了衡量的准则，偏会引起各种浪费现象.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;关于民主与市场&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;投票本身能否正确地表达民意呢? 阿罗的&amp;quot;难能定律&amp;quot;的一个的主要结论是&lt;strong&gt;社会是未必一定能够将市民的意向以优劣排列出来&lt;/strong&gt;; 其中有关民主投票较重要的一个结论是布拉克所演变出来的- &lt;strong&gt;多数取决并不一定能正确地反映民意&lt;/strong&gt;; (假若投票权能在自由市场公开买卖,只要交易费用不过高,投票必能正确地反映民意: 每个社会决定,市民所受的利害不同,而以投票方式,多数取决,受益者的总利可能远较受害者的总负值为低; 若后者可以补偿前者的话,害大于利的决策就不会实行,大家都可得益),因而以市价作胜负衡量是比任何其他投票方式可靠很多,我们也可因而以&lt;strong&gt;市场为最民主的地方&lt;/strong&gt;; 民主投票的最大缺点是 票数即不能反映代价,亦不能刺激生产(见上述分析); &lt;strong&gt;投票可以导致财富分配有所转变&lt;/strong&gt;; 但要改变分配,投票方式是下策.无论用甚么方法,改变财富分配与保障民权是有冲突的.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;投票取舍的主要缺点,是票数既不能反映代价,亦不能刺激生产&lt;/strong&gt;(社会是未必一定能够将市民的意向以优劣排列出来), 因此&lt;strong&gt;投票不是表达民意的可靠方法&lt;/strong&gt;; &lt;strong&gt;投票会引起财富分配的转变,故投票可成为减少民权保障的工具&lt;/strong&gt;(因为市场是以钞票投票定胜负,人数多少并没有一定的决定性,而获胜者也并不一定是富有的人); 要改变财富的分配,可用较直接及有固定性的办法.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;民主与交易费用&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;政府是什么或什么活动政府可以比市场办事较有效率,经济学仍未有肯定的答案.高斯(R.H.Coase)于1937年所发表的公司原理所推演出来的政府理论提供了一个解说;高斯认为在市场交易往往有颇高昂的费用(比如定价的费用是交易费用的一大项,包括量度费用,讯息费用,讨价还价及保障承诺的各种费用),&lt;strong&gt;在某些情况下市价是难以决定的&lt;/strong&gt;;因而资源的运用往往是不能靠市价的指引.因为&lt;strong&gt;交易费用大而难定市价,公司便会代替市场&lt;/strong&gt;;在公司里,经理指导资源的运用,免却了很多种市价的决定. &lt;strong&gt;公司的形成就是因为要节省交易费用的缘故&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;市场要先定市价,所以它的交易费用是最高的;独裁作决策的交易费用最低,但独裁者可以滥用权力. 民主投票最大的经济收益,是在决策上能节省定价的交易费用;但投票作决策的准确性不及市场.&lt;/p&gt;
</description>
        <pubDate>Wed, 09 Apr 2014 12:09:00 +0800</pubDate>
        <link>/economics/2014/04/09/some-learning-about-economics.html</link>
        <guid isPermaLink="true">/economics/2014/04/09/some-learning-about-economics.html</guid>
        
        
        <category>economics</category>
        
      </item>
    
      <item>
        <title>Math is the Basis of Science</title>
        <description>&lt;p&gt;摘录自&lt;a href=&quot;http://book.douban.com/subject/1118984/&quot;&gt;給討厭數學的人&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;古以色列人的宗教的&lt;strong&gt;基本教义就是与唯一绝对的人格神所订的契约&lt;/strong&gt;，神会不时地判断他们有没有背弃这个契约。如果没有坚守这个契约，他们就会被全部消灭。这促使以色列人不得不心惊胆战地把思考推往逻辑的方向。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;以色列宗教的秘密就在神和先知的争论。&lt;strong&gt;神对先知的命令是绝对的，但是命令的正确内容要藉由争论来明辨&lt;/strong&gt;。所以以色列宗教蕴含着无限的发展可能性，成为孕育出逻辑学的主轴，促使逻辑学和数学结合。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;产生前后一贯的逻辑体系，并与之结合，这就是为什么数学能够成为科学的龙头&lt;/strong&gt; 。中国的数学与实用性密切相关。像希腊的欧式几何学显性的 &lt;strong&gt;论证性&lt;/strong&gt;，是中国数学所缺乏的。既然缺乏论证性，就不可能有前后一贯的逻辑体系。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;这个逻辑体系要作为人的伦理，也就是人的世界观，人生观的中枢，还必须在宗教上取得合理性，去除不合理的地方。也就是说，&lt;strong&gt;逻辑必须随着宗教的合理化前进。逻辑必须摆脱魔术，巫术，礼仪的纠缠，才能单纯地运作&lt;/strong&gt;。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;存不存在是个大问题。有些问题是无解的，重点就在这里。是否以“解”（存在）为目的是个问题。 &lt;strong&gt;“问题有没有答案” 正是人类所面临的最大问题&lt;/strong&gt;，以神学来说，神学最大的问题点是“神是否真的存在”。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&amp;lt;!--more--&amp;gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;古代中国社会虽然喜好逻辑辩论，却没有综合归结出形式逻辑学最终的理论法则。也就是一个命题是否成立（是否真假），不仅是由说者和听者之间的情谊来决定，也要看说者是否能看穿听者的心。而形式逻辑学的精髓却是，决定一个命题是否成立完全与说者和听者的能力和关系毫无关系。古以色列的一神教，绝对的神和人缔结契约这个感念不能缺乏高度精密的逻辑学。遵守这个契约是救赎的条件。争论的对象是最高且绝对的神，就是这种拿生命做赌注，无比激烈的争论，才能使逻辑学的发展达到极限。古代中国是人与人之间的辩论，成败依赖于说服的技巧。所以其逻辑主要是揣摩或臆测，推想对方的心情而已。当逻辑的极致是在揣摩和忖度，只是要以对方容易接受的方式陈述其内心的需求时，就不会去讲究话里面所涵喻的道理在客观上是否正确。这就是中国的逻辑学没有升华为形式逻辑学，中国的数学逻辑无法重整的原因。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;近代数学的逻辑是形式逻辑学，而形式逻辑学是古希腊的亚里士多德完成的。不过，使逻辑汇整为完美无缺的形式逻辑学，则是古代以色列人的神。古以色列人的神是绝对唯一的人格神，这个宗教的基本教义就是神与人的契约。契约是绝对的，所以 &lt;strong&gt;神要求人绝对且正确地遵守契约。契约不是“成立”就是“不成立”，没x有模棱两可的空间，就诞生了“矛盾律”&lt;/strong&gt;。矛盾律确定之后”，还有 &lt;strong&gt;契约就是契约，不是契约以外的东西，，就指向了“排中律&lt;/strong&gt; 。形式逻辑学是依照这三个原则所产生的，进而成为数学的源头。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;矛盾律指两个命题不会都为真，也不会都为假；一定是一个为真，另一个为假&lt;/strong&gt;。&lt;strong&gt;排中律指两个命题之外是不存在的。有时候两命题不可能皆为真，却有可能皆假，这样的命题为“相反”&lt;/strong&gt;。数学绝不允许矛盾，这个禁止矛盾的大原则给予数学气势如虹的生产力，也让数学产生了归谬法这个威力十足的研究方法。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;全称命题的否定就是特称命题。用特称命题来否定全称命题，或是用全称命题来否定特称命题，就是逻辑的规则。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;“空”的思想否定了数学的思考。“空”的思想就是否定了形式逻辑学。“空”即不有也不是无，但同时即是有也是无，也是有与无之外的一切。所以是位于超越和统合有与无的地方。对于”神存在吗？“ 这个问题，依形式逻辑学，答案不是”有”就是“没有”，没有其他。可是不在乎形式逻辑学的佛教徒并不这么认为，佛教徒可能回答“佛存在”，“佛不存在”，“佛既存在也不存在”，“佛既非存在也非不存在”。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;近代资本主义的根基是“私人所有权”&lt;/strong&gt;。 私人所有权就是对个人所有物具有全面且绝对的支配，所有者可以任意处置所有物； ** 所有权的绝对性来源于基督教 ** 。在基督教中，&lt;strong&gt;神（造物主）对受造之物的所有权是绝对的&lt;/strong&gt;。正因为有资本主义的“所有权”的概念，近代资本主义才会萌芽，成长而壮大。能够在现实中支配，就是自己的东西，即支配即是所有，没有资本主义的所有权的概念，就会做出这种行为。近代资本主义是以商品交换为前提，经济的主题要求目的的合理性的行动。没有全面且绝对的所有权，商品的买卖就不可能顺利。 抽象性是资本主义所有权的另一特征，也是 &lt;strong&gt;从商品交换产生的&lt;/strong&gt;。所有权的抽象性是指 &lt;strong&gt;所有权的成立与现在是否支配此物并无关联&lt;/strong&gt;。正因为是  &lt;strong&gt;抽象性，资本主义社会中的所有权才能够轻易地验证出同一律，矛盾律，排中律，并以数学的方式处理&lt;/strong&gt; 。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;在近代资本主义中，所有权是绝对的，不为人际关系和社会情势所左右，也不容许中庸或因故变更。否则，经济主体就无法依照目的合理性去行动，市场自由也不会发挥功能。当交情比法律和规范还优先时，绝对的资本主义所有权如何成立？ 消费者和企业也就无法随心所欲地活动，资本主义也就变得千疮百孔。也就是家产官僚制一直无法转变成法律官僚制，而导致社会主义性的扭曲。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;以矛盾律为基础的归谬法，促成了在所有科学的领域中，研究的态度也同样从真理的发现变为模型的建构。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;归纳法。人的经验即是特称经验的范畴。由特称命题借归纳法得出全称命题的结论未必正确。但是&lt;strong&gt;科学就是借着把“可能正确”替换成“正确”的归纳法而蓬勃发展的&lt;/strong&gt;。要从特称命题建构出科学的真理（全称命题）是不可能的。有可能是科学真理的命题顶多也只能得到很像科学真理的命题。归纳法无法导出正确的规律，只能导出可能正确的规律。物理，化学实验等自然科学实验中使用的归纳法称为“不完全归纳法”。因为  &lt;strong&gt;该实验只能证明有可能成立。也就是自然科学的实验是不完全归纳法 *&lt;em&gt;。完整的归纳法是数学独有的，其它的归纳法未必，只能证明命题“可能是正确的，有正确的可能性”。当 *&lt;/em&gt;归纳法当作一种说服的技术时，藏有种种陷阱&lt;/strong&gt;。比如 &lt;strong&gt;列举，这时候，样本的大小和样本是否足以代表总体是非常重要的&lt;/strong&gt;。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;等价就是指两者的逻辑完全相同，也就是充要条件。必要条件是指A成立B也一定成立，B就是A的必要条件。也就是如果B命题不成立，A命题也一定不成立。充分条件是指A成立，B也一定成立，A是B的充分条件。也就是A包含在B的集合里。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;方程式是在“唯有在特定数值时成立”，可以算出解答。恒等式永远是相等的，所以求出数值没有意义的。是用来证明确实是相等的。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Fri, 04 Apr 2014 11:02:00 +0800</pubDate>
        <link>/reading/2014/04/04/math-is-the-basis-of-science.html</link>
        <guid isPermaLink="true">/reading/2014/04/04/math-is-the-basis-of-science.html</guid>
        
        
        <category>reading</category>
        
      </item>
    
      <item>
        <title>一些好的摘录</title>
        <description>&lt;ul&gt;
&lt;li&gt;&lt;p&gt;在拥有足够智商的前提下,人与人之间的差距更多取决于&lt;strong&gt;随时独力思考的习惯,勤勉的学习工作态度,坚韧不拔克服困难的能力&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;果敢干练和远见卓识的能力, 不带自负色彩的果断&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;与朋友交谈了解没有被过滤的真实&lt;/strong&gt;; &lt;strong&gt;与陌生人交流进入对方的语境&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;感觉每一次变化,都会&lt;strong&gt;比前一个阶段承担更多的责任&lt;/strong&gt;,在这样一种渐近的过程中,你会越来越有一种信念: 我们要始终拿出&amp;#39;最好的自己&amp;#39;来面对我们的工作,相信一切皆有可能,并通过行动将一切变成可能&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;尽你所能和最优秀的人合作, 向这个行业里最优秀的人看齐,并以他们为目标&lt;/strong&gt;,
作为自己修炼成长的榜样 -- 知识结构
&lt;strong&gt;找一位大人物做你的导师: 确定共同目标&lt;/strong&gt; - &lt;strong&gt;还要与他商讨联系的频率以及何种方式交流; 尽可能地尊重他做的每一件事&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;不断学习: &lt;strong&gt;专业能力明显进步了吗? 无论理论或实践,自己有独特的见解吗?
能否独立搞定? 能否独挡一面?&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;职业化: &lt;strong&gt;在其位谋其职,用自己最大的努力去做&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;做人:&lt;strong&gt;与上司,与同事,人际关系处理能力&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;尝试做一些&lt;strong&gt;新的事情&lt;/strong&gt;, 同一时间要去&lt;strong&gt;想一个新的问题或者有一种和其他人不同的新方法&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;被美丽指引&lt;/strong&gt;;把事情做正确是一件很美的事&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&amp;lt;!--more--&amp;gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;盘点自己&lt;strong&gt;承担和规避风险的摹式&lt;/strong&gt;,仔细考察身上&lt;strong&gt;令自己感到自信的特质及失败时让自己重整旗鼓的能力&lt;/strong&gt;
了解承担风险的时机和方式, 时间,金钱,感情,创意风险,要有适度的风险,寻找额外的舒适区&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;有一份还行的 &lt;strong&gt;手艺, 吃苦耐劳, 肯学习, 肯冒险&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;才能:了解自己的优势,更要了解自己的弱点; &lt;strong&gt;不断学习,搜集信息,寻找导师,实践,阅读, 评估个人和职业的不足之处&lt;/strong&gt;,并且在处于劣势时无所畏惧地弥补;
即便已经赛满新的信息和技能,仍有富余空间反省和学习
一个人的才华与学识,是可以通过努力必然获得的东西; &lt;strong&gt;至少一个领域的专家,有耐心和时间做朋友&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;正确认识&lt;strong&gt;自己的盲点,自己身上没有正确认识的东西&lt;/strong&gt;;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;有时候过于同情穷人&lt;/li&gt;
&lt;li&gt;被动,没有主动去结交对自己有帮助的,富有的人,有时候要势利下&lt;/li&gt;
&lt;li&gt;商业意识&lt;/li&gt;
&lt;li&gt;很容易被胡搅蛮缠,推托责任的人触怒&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;可以发现&lt;strong&gt;自己新的一面: 认识那些触动我的人和事,让我生气,感觉怪异或深受感动的&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;受触动:很努力的人,很负责的人,很有气质的人&lt;/li&gt;
&lt;li&gt;生气: 仗势欺人,两面三刀&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;手艺需要增进,人际交往能力, 沟通能力&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;责任感和领导能力: 让他们迅速掌握各种技能,&lt;strong&gt;能够领导团队,激励他人,经营自己的人际关系网络&lt;/strong&gt;; 已经习惯于来自世界各地的学生,&lt;strong&gt;从王室子弟到平民阶层,打成一片; 跨文化交流能力&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;让自己逐渐习惯于参加各种严酷的竟争,竟争是世界级的&lt;/strong&gt;;如果有能力参加这种高难度的竟争,可以建立自尊心和自信的的催化剂 &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;保持专注: 尽量减少在工作和家庭中的承诺,&lt;strong&gt;学着建立一种基于目标和个人价值体系的优先级系统,尽量严受&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;when you don&amp;#39;t create things, you become defined by your tastes
rather than ability, &lt;strong&gt;your tastes only narrow &amp;amp; exclude people, so create&lt;/strong&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;每天一大早挑出最重要的三件事,当天一定要能够做完; 最好有一件事重要但不急的&lt;/strong&gt;; 有些急但不重要的事,要学会放掉,能对人说 no&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;与求安全感不同,英国人 是因为&lt;strong&gt;财富能够得到尊重和保护,财富可以让他们过上舒适安宁的生活,可以全面发展自己&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;对什么都不要想当然; &lt;strong&gt;每天进步一点点&lt;/strong&gt;;  &lt;strong&gt;应该与自己排斥的人一起工作&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;要成功进行职业策划,就必须&lt;strong&gt;把握最核心的事物,做最有效能,最有价值的职业积累*; *做有价值而不重复的工作经历&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;证实倾向,&lt;strong&gt;做出决策并贯彻执行前进行一些小试验,以检验自己的想法是否正确&lt;/strong&gt;,以确保我们的决策是建立在事实而非偏见的基础上
使决策过程客观化,通过&lt;strong&gt;不断采纳他人建议来调整我们看问题的视角,丰富我们选择空间&lt;/strong&gt;,并且从当事另一方的角度看问题; 我们需要&lt;strong&gt;探寻自己信息偏倚和心理偏见的根源&lt;/strong&gt;; 我们还必须&lt;strong&gt;不断思考一个决策是否能被重构以实现我们的目标&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;认真交朋友&lt;/strong&gt;: 一个真正富有成效的关系网是友情的副产品;&lt;strong&gt;友谊是第一步,要对朋友的工作保持好奇心,并且和朋友多聊自己的工作&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;永远提早赴约&lt;/strong&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;你&lt;strong&gt;在幕后计划慈善晚宴,组织,为无声拍卖收集拍品的努力&lt;/strong&gt;,不但可以得到食物链上层人士的注意,还可以得到下层人士的感激&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;在专业评台上发表讲话; 努力成为一名思想领袖&lt;/strong&gt;,在对企业或行业具有重要意义的话题上有所建树&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;打理好关系网&lt;/strong&gt;: &lt;strong&gt;相互转发&lt;/strong&gt;之前讨论过的话题相关的有趣文章;&lt;strong&gt;相互引见,尽量参加对方组织的活动&lt;/strong&gt;; 一种&lt;strong&gt;职场友谊,如果我们发现有可以帮助对方的有意义的机会,我们都会挺身而出&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;利用现有的人际关系网: 避免急功近利,没有诚意的举动不会让你受欢迎;要做的就是 &lt;strong&gt;微笑,友善些,握手和提问&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;全方位锻造自己各方面的职业技能&lt;/strong&gt;; &lt;strong&gt;多跟职业黄金期的朋友交流&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;人到中年,要注意&lt;strong&gt;沉淀朋友,培养爱好,学会承受,勤于读书&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;做技术,就要做精做深,成为这个行业的技术专家; 找机会再到大公司去镀金,学高深的技术&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;积极争取学习和进步的机会&lt;/strong&gt;;  做技术,多锻炼,多学习来提高自己的水平;  争取自己的机会&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;积累个人的信誉,&lt;strong&gt;诚信&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;注意利用资源,比如有钱的亲戚,成功的长辈或朋友&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;人脉的积累&lt;/strong&gt;,注意认识在这个行业的人,结交他们; &lt;strong&gt;多听听成功的前辈和成功的朋友的意见&lt;/strong&gt; &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;只要彼此非常职业的相处,这不是什么问题&lt;/strong&gt;, 该董事会主席帮助她轻松地入职; 安排了一个私人午餐,以相互了解; 在董事会会议上&lt;strong&gt;言语不多&lt;/strong&gt;,而是&lt;strong&gt;倾向于董事会成员畅所欲言&lt;/strong&gt;, &lt;strong&gt;仔细倾听,总结讨论的要点,提取共同点并提出董事会决议&lt;/strong&gt;; 向每一个董事会成员打私人电话, &lt;strong&gt;介绍她自己并了解他们的关注点&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;决议要获得每个人的同意需要&lt;strong&gt;时间,耐心和一些创造力&lt;/strong&gt;; 要想让他人同意你想要的东西,你需要&lt;strong&gt;想办法解决他们的问题&lt;/strong&gt;;如果有问题需要你帮助解决的话,你需要&lt;strong&gt;了解另一方来自何处,为什么他需要解决这个问题&lt;/strong&gt;. 有时,你也无能为力,但&lt;strong&gt;至少你可以表明自己已经非常尽力了&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;需要坚受核心价值和原则; 这样才能&lt;strong&gt;建立信用和信任&lt;/strong&gt;; 而&lt;strong&gt;信任是有意成为领导者的基础&lt;/strong&gt;; &lt;strong&gt;乐意接受新挑战&lt;/strong&gt;,比如 她加入calPERS董事会时,她说她在投资方面没有太多经验; 当她加入中国银行董事会时,她说她对中国或香港的银行体系不熟悉;&lt;strong&gt;做这些是为了成长&lt;/strong&gt;; 如果你做的是自己熟悉的事情并且做好了,就真的不值得再做了; &lt;strong&gt;要经常抓住真正能够成长的机会&lt;/strong&gt;, &lt;strong&gt;需要学习更多才能做好的机会&lt;/strong&gt;;因为这样你才可以&lt;strong&gt;拓宽自己的眼界&lt;/strong&gt;. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;花在学习上的精力,&lt;strong&gt;锻炼自身技艺的认真态度,以及真正学到的东西&lt;/strong&gt;
学历对你成就的影响,远远比不上其他许多东西: &lt;strong&gt;选择伴侣的智慧,与所居住的社区之间的互动,对组建的家庭的慷慨&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;大学应该让你改变而不是延续过往: 你应该&lt;strong&gt;翻开新的一页,成为崭新的自己&lt;/strong&gt;,
而不是让一切在十七八岁的你身上定型&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;一个人不断进步的结果是&lt;strong&gt;会遇到越来越精彩和优秀的人&lt;/strong&gt;,不一定是指地位上金钱上的,而是你知道他真的很优秀,从外在到内心; &lt;strong&gt;就因为你变得优秀,你会遇到更优秀的人&lt;/strong&gt;; &lt;strong&gt;为遇到这些更优秀的人而进步吧,不要停止&lt;/strong&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;所有的说法都很具体并且来自于切身的经历; &lt;strong&gt;尊重那些踏实的人,多做事,把小事做好&lt;/strong&gt; &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;每一个人,都是我的老师;养成一种&lt;strong&gt;随时随地随人随事学习&lt;/strong&gt;的习惯:用心观察生活,在旅行中考察风土人情,&lt;strong&gt;思考为什么并且找寻答案&lt;/strong&gt;,询问各种职业的人关于他们的工作&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Don&amp;#39;t do lousy jobs&lt;/strong&gt;. 随着年龄的增长，我们犯错误的成本越来越高；&lt;strong&gt;如果是因为怠慢而犯错以至丧失机会，那代价就太大了&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;真正适合我的环境和圈子，应该是能够让我&lt;strong&gt;展现真实的自我&lt;/strong&gt;的地方&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;don&amp;#39;t judge too soon&lt;/strong&gt; .  先入为主很容易误判； 对人对事，在收集到足够证据之前，&lt;strong&gt;不好轻易下定论&lt;/strong&gt;，言辞上留有余地，心理上抱有一定程度的观望，爱恨不在一瞬间，真伪良莠需要时间来证明&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;职场&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;人才都要经得起折腾，&lt;strong&gt;负责到底的人创造性解决难题的人&lt;/strong&gt;是最有机会成为职场黑马的&lt;/li&gt;
&lt;li&gt;职场人如果所做的工作没有吃力感，较轻松，是一个比较危险的状态，意味着随时你的工作会被更低工资的人替代；&lt;strong&gt;给自己一点压力，你才会进步&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;有能力还全心全意还团结协作的人就是黑马了；&lt;strong&gt;三心二意的投入和全心全意的投入其实费的时间一样，但工作结果完全不一样&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;一部分员工做事会反思有悟性并且会想出一些小办法提高效率，还有极少员工会&lt;strong&gt;归纳会思考&lt;/strong&gt;，会将&lt;strong&gt;工作流程进行极大的改进&lt;/strong&gt;并&lt;strong&gt;找到一件事情的关键点&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;我们社会认为富就是错,原罪;这是不对的,&lt;strong&gt;富人没错,富本身并不错的&lt;/strong&gt;;过去叫&lt;strong&gt;剥削,但这个理论是错的&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;中国传统是同情穷人,而不分对错 &lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Sun, 30 Mar 2014 22:14:00 +0800</pubDate>
        <link>/summary/2014/03/30/some-good-learning.html</link>
        <guid isPermaLink="true">/summary/2014/03/30/some-good-learning.html</guid>
        
        
        <category>summary</category>
        
      </item>
    
  </channel>
</rss>
